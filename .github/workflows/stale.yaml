tab
name: Close stale PRs and Issues

permissions:
  issues: write
  pull-requests: write

on:
  schedule:
  - cron: "00 0 * * *" # runs at 00:00 daily

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/stale@v9.1.0
      name: Clean up stale PRs and Issues
      with:
        stale-pr-message: "ðŸ‘‹ This pull request has been marked as stale because it has been open with no activity for 180 days. You can: comment on the PR or remove the stale label to hold stalebot off for a while, add the `Keep` label to hold stale off permanently, or do nothing. If you do nothing, this pull request will be closed eventually by the stalebot. Please see CONTRIBUTING.md for more policy details."
        stale-pr-label: "Stale"
        close-pr-message: "ðŸ‘‹ This pull request has been closed by stalebot because it has been open with no activity for over 180 days. Please see CONTRIBUTING.md for more policy details."
        stale-issue-label: "Stale"
        stale-issue-message: "ðŸ‘‹ This issue has been marked as stale because it has been open with no activity for 180 days. You can: comment on the issue or remove the stale label to hold stalebot off for a while, add the `Keep` label to hold stale off permanently, or do nothing. If you do nothing, this issue will be closed eventually by the stalebot. Please see CONTRIBUTING.md for more policy details."
        close-issue-message: "ðŸ‘‹ This issue has been closed by stalebot because it has been open with no activity for over 180 days. Please see CONTRIBUTING.md for more policy details."
        exempt-pr-labels: "Keep" # a "Keep" label will keep the PR from being closed as stale
        exempt-issue-labels: "Keep" # a "Keep" label will keep the issue from being closed as stale
        days-before-pr-stale: 180 # when the PR is considered stale
        days-before-pr-close: 15 # when the PR is closed by the bot
        days-before-issue-stale: 180 # when the issue is considered stale
        days-before-issue-close: 15 # when the issue is closed by the bot
        exempt-assignees: 'advanced-security-dependency-graph'
        ascending: true
            - name: Setup Node.js environment
  uses: actions/setup-node@v5.0.0
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Set to false to disable automatic caching based on the package manager field in package.json. By default, caching is enabled if the package manager field is present.
    package-manager-cache: # optional, default is true
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
    # Used to specify an alternative mirror to downlooad Node.js binaries from
    mirror: # optional
    # The token used as Authorization header when fetching from the mirror
    mirror-token: # optional
          
